
/ {
	reg_usb2_drvvbus: regulator@1 {
		compatible = "regulator-fixed";
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_usb2_drvvbus>;

		regulator-name = "usb2_drvvbus";
		regulator-min-microvolt = <5000000>;
		regulator-max-microvolt = <5000000>;
		enable-active-high;
		gpio = <&gpio1 11 GPIO_ACTIVE_HIGH>;
	};
};

&gpio5 {
	mipi_rst {
		gpio-hog;
		gpios = <7 GPIO_ACTIVE_HIGH>;
		output-low;
		line-name = "mipi_rst";
	};
};

&i2c2 {
	/*
	 * Workaround for:
	 *   e7805: I2C: When the I2C clock speed is configured for 400 kHz, the SCL low period
	 *   violates the I2C spec of 1.3 uS min
	 */
	clock-frequency = <384000>;

	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_i2c2>;
	status = "okay";

	adv_bridge: adv7535@39 {
		compatible = "adi,adv7533";
		reg = <0x39>;
		adi,addr-cec = <0x3c>;
		adi,dsi-lanes = <4>;
		status = "okay";
		interrupt-parent = <&gpio5>;
		interrupts = <6 IRQ_TYPE_LEVEL_LOW>;
		port {
			adv7535_from_dsim: endpoint {
				remote-endpoint = <&dsim_to_adv7535>;
			};
		};
	};
};

&lcdif {
	status = "okay";
};

&mipi_dsi {
	status = "okay";

	port@1 {
		dsim_to_adv7535: endpoint {
			remote-endpoint = <&adv7535_from_dsim>;
		};
	};
};

&iomuxc {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_fec1_gpios>;

	imx8mm-s195x-factory {
		pinctrl_i2c2: i2c2grp {
			fsl,pins = <
				MX8MM_IOMUXC_I2C2_SCL_I2C2_SCL		(IOMUX_CONFIG_SION | PAD_CTL_PE_UP | PAD_CTL_HYS | PAD_CTL_FAST | PAD_CTL_DSE6x)
				MX8MM_IOMUXC_I2C2_SDA_I2C2_SDA		(IOMUX_CONFIG_SION | PAD_CTL_PE_UP | PAD_CTL_HYS | PAD_CTL_FAST | PAD_CTL_DSE6x)
			>;
		};

		pinctrl_uart1: uart1grp {
			fsl,pins = <
				MX8MM_IOMUXC_UART1_RXD_UART1_DCE_RX	(PAD_CTL_PE_DOWN | PAD_CTL_HYS)
				MX8MM_IOMUXC_UART1_TXD_UART1_DCE_TX	(PAD_CTL_PE_DOWN | PAD_CTL_HYS)
			>;
		};

		pinctrl_usb2_drvvbus: usb2drvvbusgrp {
			fsl,pins = <
				MX8MM_IOMUXC_GPIO1_IO11_GPIO1_IO11	(PAD_CTL_PE_DOWN | PAD_CTL_HYS)
			>;
		};

		/*
		 * Because the U-Boot will configure the pins for ethernet, we need to set
		 * them back as GPIOs, so they can be used again for the factory-tester.
		 */
		pinctrl_fec1_gpios: fec1gpiogrp {
			fsl,pins = <
				MX8MM_IOMUXC_ENET_MDC_GPIO1_IO16	(PAD_CTL_PE_DOWN | PAD_CTL_HYS)
				MX8MM_IOMUXC_ENET_MDIO_GPIO1_IO17	(PAD_CTL_PE_DOWN | PAD_CTL_HYS)
				MX8MM_IOMUXC_ENET_TD2_GPIO1_IO19	(PAD_CTL_PE_DOWN | PAD_CTL_HYS)
				MX8MM_IOMUXC_ENET_TD1_GPIO1_IO20	(PAD_CTL_PE_DOWN | PAD_CTL_HYS)
				MX8MM_IOMUXC_ENET_TD0_GPIO1_IO21	(PAD_CTL_PE_DOWN | PAD_CTL_HYS)
				MX8MM_IOMUXC_ENET_TX_CTL_GPIO1_IO22	(PAD_CTL_PE_DOWN | PAD_CTL_HYS)
				MX8MM_IOMUXC_ENET_RX_CTL_GPIO1_IO24	(PAD_CTL_PE_DOWN | PAD_CTL_HYS)
				MX8MM_IOMUXC_ENET_RXC_GPIO1_IO25	(PAD_CTL_PE_DOWN | PAD_CTL_HYS)
				MX8MM_IOMUXC_ENET_RD0_GPIO1_IO26	(PAD_CTL_PE_DOWN | PAD_CTL_HYS)
				MX8MM_IOMUXC_ENET_RD1_GPIO1_IO27	(PAD_CTL_PE_DOWN | PAD_CTL_HYS)
				MX8MM_IOMUXC_ENET_TD3_GPIO1_IO18	(PAD_CTL_PE_DOWN | PAD_CTL_HYS)
				MX8MM_IOMUXC_ENET_TXC_GPIO1_IO23	(PAD_CTL_PE_DOWN | PAD_CTL_HYS)
				MX8MM_IOMUXC_ENET_RD2_GPIO1_IO28	(PAD_CTL_PE_DOWN | PAD_CTL_HYS)
				MX8MM_IOMUXC_ENET_RD3_GPIO1_IO29	(PAD_CTL_PE_DOWN | PAD_CTL_HYS)
			>;
		};
	};
};

&uart1 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_uart1>;
	status = "okay";
};

&usbotg2 {
	dr_mode = "host";
	status = "okay";
	vbus-supply = <&reg_usb2_drvvbus>;
};

