/******************************************************************************
 *
 * Copyright(c) 2007 - 2020  Realtek Corporation.
 *
 * This program is free software; you can redistribute it and/or modify it
 * under the terms of version 2 of the GNU General Public License as
 * published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for
 * more details.
 *
 * The full GNU General Public License is included in this distribution in the
 * file called LICENSE.
 *
 * Contact Information:
 * wlanfae <wlanfae@realtek.com>
 * Realtek Corporation, No. 2, Innovation Road II, Hsinchu Science Park,
 * Hsinchu 300, Taiwan.
 *
 * Larry Finger <Larry.Finger@lwfinger.net>
 *
 *****************************************************************************/

#ifndef _HALRF_HWIMG_RAW_DATA_8730E_H
#define _HALRF_HWIMG_RAW_DATA_8730E_H

#define D_S_SIZE DELTA_SWINGIDX_SIZE
#define D_ST_SIZE DELTA_SWINTSSI_SIZE
#define CH_NULL 1

/******************************************************************************
 *                           RadioA.csv
 ******************************************************************************/
const u32 array_mp_8730e_radioa[] = {
	0xe0001b,
	0x03bfe0,
	0x1a60c00,
	0x708b846,
	0x9015a00,
	0xb8080d6,
	0xb3c6200,
	0x5580f44,
	0x9248060,
	0x9b050fe,
	0x9c5a011,
	0xee00002,
	0x3000000,
	0x3f00021,
	0x3001000,
	0x3f00021,
	0x3002000,
	0x3f0001f,
	0x3003000,
	0x3f00021,
	0x3004000,
	0x3f00024,
	0x3005000,
	0x3f00021,
	0x3006000,
	0x3f00021,
	0x3007000,
	0x3f00021,
	0x300a000,
	0x3f0002a,
	0xee00000,
	0xee00004,
	0x3000000,
	0x3f00084,
	0x3001000,
	0x3f00126,
	0x3002000,
	0x3f001ae,
	0x3003000,
	0x3f001ae,
	0x3004000,
	0x3f00104,
	0x3005000,
	0x3f0018c,
	0x3006000,
	0x3f0008c,
	0x3007000,
	0x3f0018c,
	0x300a000,
	0x3f00026,
	0xee00000,
	0x1b73a00,
	0x1b73a40,
	0x1c6bc08,
	0x71b1001,
	0x7a80200,
	0x7b80200,
	0xef08000,
	0x3300007,
	0x3e08001,
	0x3f0017e,
	0x3300006,
	0x3e08019,
	0x3f0017e,
	0x3300005,
	0x3e0a039,
	0x3f0017e,
	0x3300004,
	0x3e0a039,
	0x3f0015e,
	0x3300003,
	0x3e0a039,
	0x3f0010e,
	0x3300002,
	0x3e06041,
	0x3f0014e,
	0x3300001,
	0x3e06441,
	0x3f0014e,
	0x3300000,
	0x3e07ec0,
	0x3f0014f,
	0x330000f,
	0x3e08001,
	0x3f0017e,
	0x330000e,
	0x3e08019,
	0x3f0017e,
	0x330000d,
	0x3e0a039,
	0x3f0017e,
	0x330000c,
	0x3e0a039,
	0x3f0015e,
	0x330000b,
	0x3e0a039,
	0x3f0010f,
	0x330000a,
	0x3e06041,
	0x3f0014e,
	0x3300009,
	0x3e06441,
	0x3f0014e,
	0x3300008,
	0x3e07ec0,
	0x3f0014f,
	0x3300017,
	0x3e08001,
	0x3f0017e,
	0x3300016,
	0x3e08019,
	0x3f0017e,
	0x3300015,
	0x3e0a039,
	0x3f0017e,
	0x3300014,
	0x3e0a039,
	0x3f0015e,
	0x3300013,
	0x3e0a039,
	0x3f0010f,
	0x3300012,
	0x3e06041,
	0x3f0014e,
	0x3300011,
	0x3e06441,
	0x3f0014e,
	0x3300010,
	0x3e07ec0,
	0x3f0014f,
	0x3300027,
	0x3e08002,
	0x3f0017e,
	0x3300026,
	0x3e0a009,
	0x3f0017e,
	0x3300025,
	0x3e0a039,
	0x3f0017e,
	0x3300024,
	0x3e0a039,
	0x3f0015e,
	0x3300023,
	0x3e0a039,
	0x3f0010e,
	0x3300022,
	0x3e06041,
	0x3f0014e,
	0x3300021,
	0x3e06441,
	0x3f0014e,
	0x3300020,
	0x3e07ec0,
	0x3f0014f,
	0x330002f,
	0x3e08002,
	0x3f0017e,
	0x330002e,
	0x3e0a009,
	0x3f0017e,
	0x330002d,
	0x3e0a039,
	0x3f0017e,
	0x330002c,
	0x3e0a039,
	0x3f0015e,
	0x330002b,
	0x3e0a039,
	0x3f0010e,
	0x330002a,
	0x3e06041,
	0x3f0014e,
	0x3300029,
	0x3e06441,
	0x3f0014e,
	0x3300028,
	0x3e07ec0,
	0x3f0014f,
	0x3300037,
	0x3e08002,
	0x3f0017e,
	0x3300036,
	0x3e0a009,
	0x3f0017e,
	0x3300035,
	0x3e0a039,
	0x3f0017e,
	0x3300034,
	0x3e0a039,
	0x3f0015e,
	0x3300033,
	0x3e0a039,
	0x3f0010e,
	0x3300032,
	0x3e06041,
	0x3f0014e,
	0x3300031,
	0x3e06441,
	0x3f0014e,
	0x3300030,
	0x3e07ec0,
	0x3f0014f,
	0xef00000,
	0xef02000,
	0x3300000,
	0x3f00003,
	0x3300001,
	0x3f00000,
	0x3300002,
	0x3f00000,
	0xef00000,
	0x790e000,
	0x8c1ff84,
	0x95002fd,
	0x8b520fa,
	0x8d1a684,
	0x8400003,
	0xef04000,
	0x3300007,
	0x3fc079b,
	0x3300006,
	0x3fc073b,
	0x3300005,
	0x3fc063b,
	0x3300004,
	0x3fc043b,
	0x3300003,
	0x3fc8b3b,
	0x3300002,
	0x3fc033b,
	0x3300001,
	0x3fc023b,
	0x3300000,
	0x3fc423b,
	0x330000f,
	0x3fc079b,
	0x330000e,
	0x3fc073b,
	0x330000d,
	0x3fc063b,
	0x330000c,
	0x3fc043b,
	0x330000b,
	0x3fc8b3b,
	0x330000a,
	0x3fc033b,
	0x3300009,
	0x3fc023b,
	0x3300008,
	0x3fc403b,
	0xef00000,
	0xef01000,
	0x330000f,
	0x3f0001c,
	0x3e0001c,
	0x330000e,
	0x3f0001c,
	0x3e0001c,
	0x3300017,
	0x3f0001c,
	0x3e0001c,
	0x3300016,
	0x3f0001c,
	0x3e0001c,
	0xef00000,
	0xee00010,
	0x3300007,
	0x3f00001,
	0xee00000,
	0xef80000,
	0x3300001,
	0x3e00801,
	0x3f70002,
	0x3300003,
	0x3e00871,
	0x3f7e086,
	0x330000d,
	0x3e00070,
	0x3f7c080,
	0x330000f,
	0x3e00000,
	0x3f60000,
	0x330000e,
	0x3e00070,
	0x3f7e080,
	0xef00000,
	0xec80000,
	0x330000d,
	0x3f00006,
	0x330000f,
	0x3f00006,
	0x330000e,
	0x3f00006,
	0x330001d,
	0x3f00043,
	0x330001f,
	0x3f00043,
	0x330001e,
	0x3f00043,
	0x3300013,
	0x3f001c3,
	0x3300001,
	0x3f0001c,
	0x3300002,
	0x3f0003f,
	0xec00000,
	0x5994716,
	0x628904c,
	0x634ae07,
	0xeb00002,
	0x3300000,
	0x3e6403f,
	0x3f2e164,
	0x3300001,
	0x3e6443f,
	0x3f2e164,
	0xeb00000,
	0xef00080,
	0x3000002,
	0x3001004,
	0x3002005,
	0x3003007,
	0x3004004,
	0x3005005,
	0x3006006,
	0x3007007,
	0xef00000,
	0xef00010,
	0x3000000,
	0x3001020,
	0x3002021,
	0x3003023,
	0x3004027,
	0x3005047,
	0x300604f,
	0x300705f,
	0x3008000,
	0x3009021,
	0x300a041,
	0x300b042,
	0x300c043,
	0x300d045,
	0x300e047,
	0x300f067,
	0xef00000,
	0xef00008,
	0x3000000,
	0x3001001,
	0x3002003,
	0x3003007,
	0x3004001,
	0x3005003,
	0x3006005,
	0x3007007,
	0xef00000,
	0xee08000,
	0x3300000,
	0x3e00002,
	0x3f20854,
	0x3300001,
	0x3e00003,
	0x3f20854,
	0xee00000,
	0xee10000,
	0x3004030,
	0x3005030,
	0x3006030,
	0x3007030,
	0x300c030,
	0x3018030,
	0x3019030,
	0x301a030,
	0x301b030,
	0x301c030,
	0x301d030,
	0x301e030,
	0x301f030,
	0x3020030,
	0x3021030,
	0x3022030,
	0x3023030,
	0x3024030,
	0x3025030,
	0x3026030,
	0x3027030,
	0x3028030,
	0x3029030,
	0x302a030,
	0x302b030,
	0x302c030,
	0x302d030,
	0x302e030,
	0x302f030,
	0x3030030,
	0x3031030,
	0x3032030,
	0x3033030,
	0x3034030,
	0x3035030,
	0x3036030,
	0x3037030,
	0x3038030,
	0x3039030,
	0x303a030,
	0x303b030,
	0xee00000,
	0x61f0000,
	0xee02000,
	0x3300000,
	0x3ff45f7,
	0x3300001,
	0x3ff55f7,
	0x3300002,
	0x3ff54f7,
	0xee00000,
	0xee04000,
	0x3001000,
	0x3002000,
	0x3003000,
	0x3004000,
	0x3005000,
	0x3006000,
	0x3007000,
	0x3008000,
	0x3009000,
	0x300a000,
	0x300b000,
	0x300c000,
	0x300d000,
	0x300e000,
	0x300f001,
	0x3011001,
	0x3012001,
	0x3013001,
	0x3014001,
	0x3015001,
	0x3016001,
	0x3017001,
	0x3018001,
	0x3019001,
	0x301a001,
	0x301b001,
	0x301c001,
	0x301d002,
	0x301e002,
	0x301f002,
	0x3020002,
	0x3021002,
	0x3022002,
	0x3023002,
	0x3024002,
	0x3025002,
	0xee00000,
	0xee01000,
	0x3000439,
	0x3001439,
	0x3002439,
	0x3003439,
	0x3004439,
	0x3005439,
	0x3006439,
	0x3007439,
	0x3008439,
	0x3009439,
	0x300a439,
	0x300b439,
	0xee00000,
	0xdb00008,
	0x599471c,
	0xee00e00,
	0x7c00010,
	0x3001000,
	0xb008ce,
	0x7c00020,
	0x3002000,
	0xb007ae,
	0x7c00030,
	0x3003000,
	0xb0004e,
	0x7c00040,
	0x3004000,
	0xb0004e,
	0x7c00050,
	0x3005000,
	0xb00f1e,
	0x7c00060,
	0x3006000,
	0xb00b2e,
	0xee00000,
	0xdb00000,
	0x6a51f14,
	0x6851f17,
	0xec02000,
	0x3002863,
	0x3003463,
	0x3004153,
	0x3005133,
	0x3006123,
	0xec00000,
	0xec00800,
	0x3004863,
	0x3005463,
	0x3006453,
	0x3007143,
	//0x3002863,
	//0x3003463,
	//0x3004153,
	//0x3005133,
	//0x3006133,
	0xec00000,
	0x156afdf4,
	0x1ee04000,
	0x130001ad,
	0x130005a7,
	0x130009a1,
	0x13000d9b,
	0x13001195,
	0x1300158f,
	0x13001955,
	0x13001d1b,
	0x13002115,
	0x1300250f,
	0x130028d5,
	0x13002c9b,
	0x13003095,
	0x1300345b,
	0x13003855,
	0x13003c4f,
	0x1300401d,
	0x13004417,
	0x1ee00000,
	0x1ee04000,
	0x130201fa,
	0x130205f4,
	0x130209ee,
	0x13020de8,
	0x130211a8,
	0x130215a2,
	0x1302199c,
	0x13021d22,
	0x130220e0,
	0x130224da,
	0x1302289e,
	0x13022c60,
	0x1302305a,
	0x13023454,
	0x1302384e,
	0x13023c24,
	0x1302401e,
	0x13024418,
	0x130281fb,
	0x130285f5,
	0x130289ef,
	0x13028de9,
	0x130291a9,
	0x130295a3,
	0x1302999d,
	0x13029d23,
	0x1302a0e1,
	0x1302a4db,
	0x1302a89f,
	0x1302ac61,
	0x1302b05b,
	0x1302b455,
	0x1302b84f,
	0x1302bc25,
	0x1302c01f,
	0x1302c419,
	0x130301fb,
	0x130305f5,
	0x130309ef,
	0x13030de9,
	0x130311a9,
	0x130315a3,
	0x1303199d,
	0x13031ce7,
	0x130320e1,
	0x130324db,
	0x1303289f,
	0x13032c61,
	0x1303305b,
	0x13033455,
	0x1303384f,
	0x13033c1f,
	0x13034019,
	0x13034413,
	0x1ee00000,
	0x1ee02000,
	0x130000fa,
	0x130004f7,
	0x130008f4,
	0x13000cf1,
	0x130010ee,
	0x130014eb,
	0x130018aa,
	0x13001c68,
	0x13002065,
	0x13002462,
	0x13002824,
	0x13002c21,
	0x1300301e,
	0x1300341b,
	0x13003818,
	0x13003c15,
	0x13004012,
	0x1ee00000,
	0x1ee02000,
	0x130200f6,
	0x130204f3,
	0x130208f0,
	0x13020ced,
	0x130210ea,
	0x130214a8,
	0x130218a5,
	0x13021ca2,
	0x1302205f,
	0x1302245c,
	0x1302281c,
	0x13022c19,
	0x13023016,
	0x13023413,
	0x13023810,
	0x13023c0d,
	0x1302400a,
	0x130280f5,
	0x130284f2,
	0x130288ef,
	0x13028cec,
	0x130290e9,
	0x130294a8,
	0x130298a5,
	0x13029ca2,
	0x1302a05f,
	0x1302a45c,
	0x1302a81c,
	0x1302ac19,
	0x1302b016,
	0x1302b413,
	0x1302b810,
	0x1302bc0d,
	0x1302c00a,
	0x130300f7,
	0x130304f4,
	0x130308f1,
	0x13030cee,
	0x130310eb,
	0x130314a9,
	0x130318a6,
	0x13031ca3,
	0x13032061,
	0x1303245e,
	0x1303281e,
	0x13032c1b,
	0x13033018,
	0x13033415,
	0x13033812,
	0x13033c0f,
	0x1303400c,
	0x1ee00000,
	0x10500001,
	0x500c41,
};
const u32 array_mp_8730e_radioa_cuta[] = {
	0xe00016,
	0x10500000,
	0x500000,
	0x010000,
	0x1a60c00,
	0x708b846,
	0x9015a00,
	0xb8080d6,
	0xb3c6200,
	0x5580f44,
	0x8d2a708,
	0x9248060,
	0x9b050fe,
	0x9c5a011,
	0xee00002,
	0x3000000,
	0x3f00024,
	0x3001000,
	0x3f00021,
	0x3002000,
	0x3f0001f,
	0x3003000,
	0x3f00021,
	0x3004000,
	0x3f00024,
	0x3005000,
	0x3f00021,
	0x3006000,
	0x3f00021,
	0x3007000,
	0x3f00021,
	0x300a000,
	0x3f0002a,
	0xee00000,
	0xee00004,
	0x3000000,
	0x3f00084,
	0x3001000,
	0x3f00126,
	0x3002000,
	0x3f001ae,
	0x3003000,
	0x3f001ae,
	0x3004000,
	0x3f00104,
	0x3005000,
	0x3f0018c,
	0x3006000,
	0x3f0008c,
	0x3007000,
	0x3f0018c,
	0x300a000,
	0x3f00026,
	0xee00000,
	0x1b73a00,
	0x1b73a40,
	0x1c6bc08,
	0x71b1001,
	0x7a80200,
	0x7b80200,
	0xef08000,
	0x3300007,
	0x3e08001,
	0x3f0017e,
	0x3300006,
	0x3e08001,
	0x3f0017e,
	0x3300005,
	0x3e0a039,
	0x3f0017e,
	0x3300004,
	0x3e0a039,
	0x3f0015e,
	0x3300003,
	0x3e0a039,
	0x3f0010e,
	0x3300002,
	0x3e06041,
	0x3f0014e,
	0x3300001,
	0x3e06441,
	0x3f0014e,
	0x3300000,
	0x3e07ec0,
	0x3f0014f,
	0x330000f,
	0x3e08001,
	0x3f0017e,
	0x330000e,
	0x3e08001,
	0x3f0017e,
	0x330000d,
	0x3e0a039,
	0x3f0017e,
	0x330000c,
	0x3e0a039,
	0x3f0015e,
	0x330000b,
	0x3e0a039,
	0x3f0010f,
	0x330000a,
	0x3e06041,
	0x3f0014e,
	0x3300009,
	0x3e06441,
	0x3f0014e,
	0x3300008,
	0x3e07ec0,
	0x3f0014f,
	0x3300017,
	0x3e08001,
	0x3f0017e,
	0x3300016,
	0x3e08001,
	0x3f0017e,
	0x3300015,
	0x3e0a039,
	0x3f0017e,
	0x3300014,
	0x3e0a039,
	0x3f0015e,
	0x3300013,
	0x3e0a039,
	0x3f0010f,
	0x3300012,
	0x3e06041,
	0x3f0014e,
	0x3300011,
	0x3e06441,
	0x3f0014e,
	0x3300010,
	0x3e07ec0,
	0x3f0014f,
	0x3300027,
	0x3e08001,
	0x3f0017e,
	0x3300026,
	0x3e08001,
	0x3f0017e,
	0x3300025,
	0x3e0a039,
	0x3f0017e,
	0x3300024,
	0x3e0a039,
	0x3f0015e,
	0x3300023,
	0x3e0a039,
	0x3f0010e,
	0x3300022,
	0x3e06041,
	0x3f0014e,
	0x3300021,
	0x3e06441,
	0x3f0014e,
	0x3300020,
	0x3e07ec0,
	0x3f0014f,
	0x330002f,
	0x3e08001,
	0x3f0017e,
	0x330002e,
	0x3e08001,
	0x3f0017e,
	0x330002d,
	0x3e0a039,
	0x3f0017e,
	0x330002c,
	0x3e0a039,
	0x3f0015e,
	0x330002b,
	0x3e0a039,
	0x3f0010e,
	0x330002a,
	0x3e06041,
	0x3f0014e,
	0x3300029,
	0x3e06441,
	0x3f0014e,
	0x3300028,
	0x3e07ec0,
	0x3f0014f,
	0x3300037,
	0x3e08001,
	0x3f0017e,
	0x3300036,
	0x3e08001,
	0x3f0017e,
	0x3300035,
	0x3e0a039,
	0x3f0017e,
	0x3300034,
	0x3e0a039,
	0x3f0015e,
	0x3300033,
	0x3e0a039,
	0x3f0010e,
	0x3300032,
	0x3e06041,
	0x3f0014e,
	0x3300031,
	0x3e06441,
	0x3f0014e,
	0x3300030,
	0x3e07ec0,
	0x3f0014f,
	0xef00000,
	0xef02000,
	0x3300000,
	0x3f00003,
	0x3300001,
	0x3f00000,
	0x3300002,
	0x3f00000,
	0xef00000,
	0x790e000,
	0x8c1ff84,
	0x95002fd,
	0x8b520fa,
	0x8d2a684,
	0xef04000,
	0x3300007,
	0x3fc079b,
	0x3300006,
	0x3fc079b,
	0x3300005,
	0x3fc073b,
	0x3300004,
	0x3fc063b,
	0x3300003,
	0x3fc043b,
	0x3300002,
	0x3fc8b3b,
	0x3300001,
	0x3fc033b,
	0x3300000,
	0x3fc003b,
	0x330000f,
	0x3fc079b,
	0x330000e,
	0x3fc079b,
	0x330000d,
	0x3fc073b,
	0x330000c,
	0x3fc063b,
	0x330000b,
	0x3fc043b,
	0x330000a,
	0x3fc8b3b,
	0x3300009,
	0x3fc033b,
	0x3300008,
	0x3fc403b,
	0xef00000,
	0xef01000,
	0x330000f,
	0x3f0001c,
	0x3e0001c,
	0x330000e,
	0x3f0001c,
	0x3e0001c,
	0x3300017,
	0x3f0001c,
	0x3e0001c,
	0x3300016,
	0x3f0001c,
	0x3e0001c,
	0xef00000,
	0xee00010,
	0x3300007,
	0x3f00001,
	0xee00000,
	0xef80000,
	0x3300001,
	0x3e00801,
	0x3f70002,
	0x3300003,
	0x3e00871,
	0x3f7e086,
	0x330000d,
	0x3e00070,
	0x3f7c080,
	0x330000f,
	0x3e00000,
	0x3f60000,
	0x330000e,
	0x3e00070,
	0x3f7e080,
	0xef00000,
	0xec80000,
	0x330000d,
	0x3f00006,
	0x330000f,
	0x3f00006,
	0x330000e,
	0x3f00006,
	0x330001d,
	0x3f00043,
	0x330001f,
	0x3f00043,
	0x330001e,
	0x3f00043,
	0x3300013,
	0x3f001c3,
	0x3300001,
	0x3f0001c,
	0x3300002,
	0x3f0003f,
	0xec00000,
	0x5994716,
	0x629904c,
	0x634ae07,
	0xeb00002,
	0x3300000,
	0x3e6c03f,
	0x3f2e164,
	0x3300001,
	0x3e6c43f,
	0x3f2e164,
	0xeb00000,
	0xef00080,
	0x3000002,
	0x3001004,
	0x3002005,
	0x3003007,
	0x3004004,
	0x3005005,
	0x3006006,
	0x3007007,
	0xef00000,
	0xef00010,
	0x3000000,
	0x3001020,
	0x3002021,
	0x3003023,
	0x3004027,
	0x3005047,
	0x300604f,
	0x300705f,
	0x3008001,
	0x3009021,
	0x300a041,
	0x300b042,
	0x300c043,
	0x300d045,
	0x300e047,
	0x300f067,
	0xef00000,
	0xef00008,
	0x3000000,
	0x3001001,
	0x3002003,
	0x3003007,
	0x3004001,
	0x3005003,
	0x3006005,
	0x3007007,
	0xef00000,
	0xee08000,
	0x3300000,
	0x3e00002,
	0x3f40654,
	0x3300001,
	0x3e00003,
	0x3f40654,
	0xee00000,
	0xee10000,
	0x3004030,
	0x3005030,
	0x3006030,
	0x3007030,
	0x300c030,
	0x3018030,
	0x3019030,
	0x301a030,
	0x301b030,
	0x301c030,
	0x301d030,
	0x301e030,
	0x301f030,
	0x3020030,
	0x3021030,
	0x3022030,
	0x3023030,
	0x3024030,
	0x3025030,
	0x3026030,
	0x3027030,
	0x3028030,
	0x3029030,
	0x302a030,
	0x302b030,
	0x302c030,
	0x302d030,
	0x302e030,
	0x302f030,
	0x3030030,
	0x3031030,
	0x3032030,
	0x3033030,
	0x3034030,
	0x3035030,
	0x3036030,
	0x3037030,
	0x3038030,
	0x3039030,
	0x303a030,
	0x303b030,
	0xee00000,
	0x61f0000,
	0xee02000,
	0x3300000,
	0x3ff12f5,
	0x3300001,
	0x3ff32f5,
	0x3300002,
	0x3ff23f4,
	0xee00000,
	0xee04000,
	0x3001000,
	0x3002000,
	0x3003000,
	0x3004000,
	0x3005000,
	0x3006000,
	0x3007000,
	0x3008000,
	0x3009000,
	0x300a000,
	0x300b000,
	0x300c000,
	0x300d000,
	0x300e000,
	0x300f001,
	0x3011001,
	0x3012001,
	0x3013001,
	0x3014001,
	0x3015001,
	0x3016001,
	0x3017001,
	0x3018001,
	0x3019001,
	0x301a001,
	0x301b001,
	0x301c001,
	0x301d002,
	0x301e002,
	0x301f002,
	0x3020002,
	0x3021002,
	0x3022002,
	0x3023002,
	0x3024002,
	0x3025002,
	0xee00000,
	0xee01000,
	0x3000439,
	0x3001439,
	0x3002439,
	0x3003439,
	0x3004439,
	0x3005439,
	0x3006439,
	0x3007439,
	0x3008439,
	0x3009439,
	0x300a439,
	0x300b439,
	0xee00000,
	0xdb00008,
	0x599471c,
	0xee00e00,
	0x7c00010,
	0x3001000,
	0xb00dc0,
	0x7c00020,
	0x3002000,
	0xb00da0,
	0x7c00030,
	0x3003000,
	0xb00340,
	0x7c00040,
	0x3004000,
	0xb00330,
	0x7c00050,
	0x3005000,
	0xb00102,
	0x7c00060,
	0x3006000,
	0xb00102,
	0xee00000,
	0xdb00000,
	0x6a51f14,
	0x6851f17,
	0xec02000,
	0x3004863,
	0x3005453,
	0x3006453,
	0x3007143,
	0xec00000,
	0xec00800,
	0x3004863,
	0x3005463,
	0x3006443,
	0x3007143,
	0xec00000,
	0x156afdf4,
	0x1ee04000,
	0x130001ad,
	0x130005a7,
	0x130009a1,
	0x13000d9b,
	0x13001195,
	0x1300158f,
	0x13001955,
	0x13001d1b,
	0x13002115,
	0x1300250f,
	0x130028d5,
	0x13002c9b,
	0x13003095,
	0x1300345b,
	0x13003855,
	0x13003c4f,
	0x1300401d,
	0x13004417,
	0x1ee00000,
	0x1ee04000,
	0x130201fb,
	0x130205f5,
	0x130209ef,
	0x13020de9,
	0x130211a9,
	0x130215a3,
	0x1302199d,
	0x13021d97,
	0x1302211d,
	0x130224db,
	0x1302289d,
	0x13022c5f,
	0x13023059,
	0x13023453,
	0x1302381d,
	0x13023c17,
	0x13024011,
	0x1302440b,
	0x130281fb,
	0x130285f5,
	0x130289ef,
	0x13028de9,
	0x130291a9,
	0x130295a3,
	0x1302999d,
	0x13029d97,
	0x1302a11d,
	0x1302a4db,
	0x1302a89d,
	0x1302ac5f,
	0x1302b059,
	0x1302b453,
	0x1302b81d,
	0x1302bc17,
	0x1302c011,
	0x1302c40b,
	0x130301fb,
	0x130305f5,
	0x130309ef,
	0x13030de9,
	0x130311a9,
	0x130315a3,
	0x1303199d,
	0x13031d97,
	0x13032191,
	0x130324db,
	0x1303289d,
	0x13032c5f,
	0x13033059,
	0x13033453,
	0x1303381d,
	0x13033c17,
	0x13034011,
	0x1303440b,
	0x1ee00000,
	0x1ee02000,
	0x130000fa,
	0x130004f7,
	0x130008f4,
	0x13000cf1,
	0x130010ee,
	0x130014eb,
	0x130018aa,
	0x13001c68,
	0x13002065,
	0x13002462,
	0x13002824,
	0x13002c21,
	0x1300301e,
	0x1300341b,
	0x13003818,
	0x13003c15,
	0x13004012,
	0x1ee00000,
	0x1ee02000,
	0x130200f7,
	0x130204f4,
	0x130208f1,
	0x13020cee,
	0x130210eb,
	0x130214aa,
	0x130218a7,
	0x13021ca4,
	0x13022062,
	0x1302245f,
	0x1302281e,
	0x13022c1b,
	0x13023018,
	0x13023415,
	0x13023812,
	0x13023c0f,
	0x1302400c,
	0x130280f6,
	0x130284f3,
	0x130288f0,
	0x13028ced,
	0x130290ea,
	0x130294a9,
	0x130298a6,
	0x13029ca3,
	0x1302a061,
	0x1302a45e,
	0x1302a81e,
	0x1302ac1b,
	0x1302b018,
	0x1302b415,
	0x1302b812,
	0x1302bc0f,
	0x1302c00c,
	0x130300f3,
	0x130304f0,
	0x130308ed,
	0x13030cea,
	0x130310e7,
	0x130314a7,
	0x130318a4,
	0x13031ca1,
	0x1303205f,
	0x1303245c,
	0x1303281c,
	0x13032c19,
	0x13033016,
	0x13033413,
	0x13033810,
	0x13033c0d,
	0x1303400a,
	0x1ee00000,
	0x10500001,
	0x500c01,
};
/******************************************************************************
 *                           TX_Power Limit
 ******************************************************************************/

// regu_en = {WW13, ETSI, FCC, MKK, NA, IC, KCC, ACMA, NCC, MEXICO, CHILE, UKRAINE, CN, QATAR, UK}
const bool regu_en[15] = {1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0};

const s8 tx_pwr_limit_2g_fcc[3][14] = {
	{80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 72, 58, 127}, /*CCK*/
	{64, 76, 80, 80, 80, 80, 80, 80, 80, 76, 76, 56, 48, 127}, /*OFDM*/
	{64, 76, 80, 80, 80, 80, 80, 80, 80, 72, 64, 56, 48, 127}  /*HE_B20*/
};
const s8 tx_pwr_limit_5g_fcc[2][28] = {
	{80, 80, 80, 80, 80, 80, 80, 80, 76, 80, 80, 80, 80, 80, 80, 80, 80, 80, 72, 80, 80, 80, 80, 80, 80, 80, 80, 80}, /*OFDM*/
	{80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80}  /*HE_B20*/
};
const u8 tx_shap_fcc[2][3] = {{1, 1, 1}, {1, 1}}; /*{2G{CCK, OFDM, HE_B20}, 5G{OFDM, HE_B20}}*/

const s8 tx_pwr_limit_2g_etsi[3][14] = {
	{60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 127}, /*CCK*/
	{60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 127}, /*OFDM*/
	{60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 127}  /*HE_B20*/
};
const s8 tx_pwr_limit_5g_etsi[2][28] = {
	{60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 32, 32, 32, 32, 32, 32, 32, 32}, /*OFDM*/
	{60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 80, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 32, 32, 32, 32, 32}  /*HE_B20*/
};
const u8 tx_shap_etsi[2][3] = {{0, 0, 0}, {0, 0}}; /*{2G{CCK, OFDM, HE_B20}, 5G{OFDM, HE_B20}}*/

const s8 tx_pwr_limit_2g_mkk[3][14] = {
	{60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 127}, /*CCK*/
	{60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 127}, /*OFDM*/
	{60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 127}  /*HE_B20*/
};
const s8 tx_pwr_limit_5g_mkk[2][28] = {
	{60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 32, 32, 32, 32, 32, 32, 32, 32}, /*OFDM*/
	{60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 80, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 32, 32, 32, 32, 32}  /*HE_B20*/
};
const u8 tx_shap_mkk[2][3] = {{0, 0, 0}, {0, 0}}; /*{2G{CCK, OFDM, HE_B20}, 5G{OFDM, HE_B20}}*/

const s8 tx_pwr_limit_2g_ic[3][14] = {
	{80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 72, 58, 127}, /*CCK*/
	{64, 76, 80, 80, 80, 80, 80, 80, 80, 76, 76, 56, 48, 127}, /*OFDM*/
	{64, 76, 80, 80, 80, 80, 80, 80, 80, 72, 64, 56, 48, 127}  /*HE_B20*/
};
const s8 tx_pwr_limit_5g_ic[2][28] = {
	{80, 80, 80, 80, 80, 80, 80, 80, 76, 80, 80, 80, 80, 80, 80, 80, 80, 80, 72, 80, 80, 80, 80, 80, 80, 80, 80, 80}, /*OFDM*/
	{80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80}  /*HE_B20*/
};
const u8 tx_shap_ic[2][3] = {{1, 1, 1}, {1, 1}}; /*{2G{CCK, OFDM, HE_B20}, 5G{OFDM, HE_B20}}*/

const s8 tx_pwr_limit_2g_kcc[3][14] = {
	{60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 127}, /*CCK*/
	{60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 127}, /*OFDM*/
	{60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 127}  /*HE_B20*/
};
const s8 tx_pwr_limit_5g_kcc[2][28] = {
	{60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 32, 32, 32, 32, 32, 32, 32, 32}, /*OFDM*/
	{60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 80, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 32, 32, 32, 32, 32}  /*HE_B20*/
};
const u8 tx_shap_kcc[2][3] = {{0, 0, 0}, {0, 0}}; /*{2G{CCK, OFDM, HE_B20}, 5G{OFDM, HE_B20}}*/

const s8 tx_pwr_limit_2g_ww[3][14] = {
	{60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 58, 127}, /*CCK*/
	{60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 56, 48, 127}, /*OFDM*/
	{60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 56, 48, 127}  /*HE_B20*/
};
const s8 tx_pwr_limit_5g_ww[2][28] = {
	{60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 32, 32, 32, 32, 32, 32, 32, 32}, /*OFDM*/
	{60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 80, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 32, 32, 32, 32, 32}  /*HE_B20*/
};
const s8 tx_pwr_limit_2g_na[][CH_NULL] = {{0}};
const s8 tx_pwr_limit_5g_na[][CH_NULL] = {{0}};
const u8 tx_shap_na[][CH_NULL] = {{0}};
const s8 tx_pwr_limit_2g_acma[][CH_NULL] = {{0}};
const s8 tx_pwr_limit_5g_acma[][CH_NULL] = {{0}};
const u8 tx_shap_acma[][CH_NULL] = {{0}};
const s8 tx_pwr_limit_2g_ncc[][CH_NULL] = {{0}};
const s8 tx_pwr_limit_5g_ncc[][CH_NULL] = {{0}};
const u8 tx_shap_ncc[][CH_NULL] = {{0}};
const s8 tx_pwr_limit_2g_mexico[][CH_NULL] = {{0}};
const s8 tx_pwr_limit_5g_mexico[][CH_NULL] = {{0}};
const u8 tx_shap_mexico[][CH_NULL] = {{0}};
const s8 tx_pwr_limit_2g_chile[][CH_NULL] = {{0}};
const s8 tx_pwr_limit_5g_chile[][CH_NULL] = {{0}};
const u8 tx_shap_chile[][CH_NULL] = {{0}};
const s8 tx_pwr_limit_2g_ukraine[][CH_NULL] = {{0}};
const s8 tx_pwr_limit_5g_ukraine[][CH_NULL] = {{0}};
const u8 tx_shap_ukraine[][CH_NULL] = {{0}};
const s8 tx_pwr_limit_2g_cn[][CH_NULL] = {{0}};
const s8 tx_pwr_limit_5g_cn[][CH_NULL] = {{0}};
const u8 tx_shap_cn[][CH_NULL] = {{0}};
const s8 tx_pwr_limit_2g_qatar[][CH_NULL] = {{0}};
const s8 tx_pwr_limit_5g_qatar[][CH_NULL] = {{0}};
const u8 tx_shap_qatar[][CH_NULL] = {{0}};
const s8 tx_pwr_limit_2g_uk[][CH_NULL] = {{0}};
const s8 tx_pwr_limit_5g_uk[][CH_NULL] = {{0}};
const u8 tx_shap_uk[][CH_NULL] = {{0}};


/******************************************************************************
 *                           txpwr_lmt_ru
 ******************************************************************************/
const s8 tx_pwr_limit_ru_2g_fcc[3][14] = {
	{68, 68, 72, 76, 84, 74, 74, 70, 66, 66, 66, 56, 32, 127}, /*HE-RU26*/
	{78, 78, 82, 84, 84, 84, 78, 78, 78, 74, 74, 72, 38, 127}, /*HE-RU52*/
	{78, 78, 80, 80, 80, 84, 76, 76, 76, 74, 74, 66, 56, 127}  /*HE-RU106*/
};
const s8 tx_pwr_limit_ru_5g_fcc[3][28] = {
	{52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 84, 84, 84, 84, 84, 32, 32, 32}, /*HE-RU26*/
	{60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 84, 84, 84, 84, 84, 44, 44, 44}, /*HE-RU52*/
	{68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 84, 84, 84, 84, 84, 56, 56, 56}  /*HE-RU106*/
};
const u8 tx_shap_ru_fcc[2][3] = {{1, 1, 1}, {1, 1, 1}}; /*{2G{HE-RU26, HE-RU52, HE-RU106}, 5G{HE-RU26, HE-RU52, HE-RU106}}*/

const s8 tx_pwr_limit_ru_2g_etsi[3][14] = {
	{32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 127}, /*HE-RU26*/
	{44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 127}, /*HE-RU52*/
	{56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 127}  /*HE-RU106*/
};
const s8 tx_pwr_limit_ru_5g_etsi[3][28] = {
	{24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 28, 28, 28, 28, 28, 28, 28, 28}, /*HE-RU26*/
	{36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 28, 28, 28, 28, 28, 28, 28, 28}, /*HE-RU52*/
	{48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 28, 28, 28, 28, 28, 28, 28, 28}  /*HE-RU106*/
};
const u8 tx_shap_ru_etsi[2][3] = {{0, 0, 0}, {0, 0, 0}}; /*{2G{HE-RU26, HE-RU52, HE-RU106}, 5G{HE-RU26, HE-RU52, HE-RU106}}*/

const s8 tx_pwr_limit_ru_2g_mkk[3][14] = {
	{32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 127}, /*HE-RU26*/
	{44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 127}, /*HE-RU52*/
	{56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 127}  /*HE-RU106*/
};
const s8 tx_pwr_limit_ru_5g_mkk[3][28] = {
	{24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 28, 28, 28, 28, 28, 28, 28, 28}, /*HE-RU26*/
	{36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 28, 28, 28, 28, 28, 28, 28, 28}, /*HE-RU52*/
	{48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 28, 28, 28, 28, 28, 28, 28, 28}  /*HE-RU106*/
};
const u8 tx_shap_ru_mkk[2][3] = {{0, 0, 0}, {0, 0, 0}}; /*{2G{HE-RU26, HE-RU52, HE-RU106}, 5G{HE-RU26, HE-RU52, HE-RU106}}*/

const s8 tx_pwr_limit_ru_2g_ic[3][14] = {
	{68, 68, 72, 76, 84, 74, 74, 70, 66, 66, 66, 56, 32, 127}, /*HE-RU26*/
	{78, 78, 82, 84, 84, 84, 78, 78, 78, 74, 74, 72, 38, 127}, /*HE-RU52*/
	{78, 78, 80, 80, 80, 84, 76, 76, 76, 74, 74, 66, 56, 127}  /*HE-RU106*/
};
const s8 tx_pwr_limit_ru_5g_ic[3][28] = {
	{52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 84, 84, 84, 84, 84, 32, 32, 32}, /*HE-RU26*/
	{60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 84, 84, 84, 84, 84, 44, 44, 44}, /*HE-RU52*/
	{68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 84, 84, 84, 84, 84, 56, 56, 56}  /*HE-RU106*/
};
const u8 tx_shap_ru_ic[2][3] = {{1, 1, 1}, {1, 1, 1}}; /*{2G{HE-RU26, HE-RU52, HE-RU106}, 5G{HE-RU26, HE-RU52, HE-RU106}}*/

const s8 tx_pwr_limit_ru_2g_kcc[3][14] = {
	{32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 127}, /*HE-RU26*/
	{44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 127}, /*HE-RU52*/
	{56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 127}  /*HE-RU106*/
};
const s8 tx_pwr_limit_ru_5g_kcc[3][28] = {
	{24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 28, 28, 28, 28, 28, 28, 28, 28}, /*HE-RU26*/
	{36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 28, 28, 28, 28, 28, 28, 28, 28}, /*HE-RU52*/
	{48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 28, 28, 28, 28, 28, 28, 28, 28}  /*HE-RU106*/
};
const u8 tx_shap_ru_kcc[2][3] = {{0, 0, 0}, {0, 0, 0}}; /*{2G{HE-RU26, HE-RU52, HE-RU106}, 5G{HE-RU26, HE-RU52, HE-RU106}}*/

const s8 tx_pwr_limit_ru_2g_ww[3][14] = {
	{32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 127}, /*HE-RU26*/
	{44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 38, 127}, /*HE-RU52*/
	{56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 127}  /*HE-RU106*/
};
const s8 tx_pwr_limit_ru_5g_ww[3][28] = {
	{24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 28, 28, 28, 28, 28, 28, 28, 28}, /*HE-RU26*/
	{36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 28, 28, 28, 28, 28, 28, 28, 28}, /*HE-RU52*/
	{48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 28, 28, 28, 28, 28, 28, 28, 28}  /*HE-RU106*/
};
const s8 tx_pwr_limit_ru_2g_na[][CH_NULL] = {{0}};
const s8 tx_pwr_limit_ru_5g_na[][CH_NULL] = {{0}};
const u8 tx_shap_ru_na[][CH_NULL] = {{0}};
const s8 tx_pwr_limit_ru_2g_acma[][CH_NULL] = {{0}};
const s8 tx_pwr_limit_ru_5g_acma[][CH_NULL] = {{0}};
const u8 tx_shap_ru_acma[][CH_NULL] = {{0}};
const s8 tx_pwr_limit_ru_2g_ncc[][CH_NULL] = {{0}};
const s8 tx_pwr_limit_ru_5g_ncc[][CH_NULL] = {{0}};
const u8 tx_shap_ru_ncc[][CH_NULL] = {{0}};
const s8 tx_pwr_limit_ru_2g_mexico[][CH_NULL] = {{0}};
const s8 tx_pwr_limit_ru_5g_mexico[][CH_NULL] = {{0}};
const u8 tx_shap_ru_mexico[][CH_NULL] = {{0}};
const s8 tx_pwr_limit_ru_2g_chile[][CH_NULL] = {{0}};
const s8 tx_pwr_limit_ru_5g_chile[][CH_NULL] = {{0}};
const u8 tx_shap_ru_chile[][CH_NULL] = {{0}};
const s8 tx_pwr_limit_ru_2g_ukraine[][CH_NULL] = {{0}};
const s8 tx_pwr_limit_ru_5g_ukraine[][CH_NULL] = {{0}};
const u8 tx_shap_ru_ukraine[][CH_NULL] = {{0}};
const s8 tx_pwr_limit_ru_2g_cn[][CH_NULL] = {{0}};
const s8 tx_pwr_limit_ru_5g_cn[][CH_NULL] = {{0}};
const u8 tx_shap_ru_cn[][CH_NULL] = {{0}};
const s8 tx_pwr_limit_ru_2g_qatar[][CH_NULL] = {{0}};
const s8 tx_pwr_limit_ru_5g_qatar[][CH_NULL] = {{0}};
const u8 tx_shap_ru_qatar[][CH_NULL] = {{0}};
const s8 tx_pwr_limit_ru_2g_uk[][CH_NULL] = {{0}};
const s8 tx_pwr_limit_ru_5g_uk[][CH_NULL] = {{0}};
const u8 tx_shap_ru_uk[][CH_NULL] = {{0}};



/******************************************************************************
 *                           txpwr_tracktssi
 ******************************************************************************/

const s8 delta_swingidx_mp_5ga_n_txpwrtrkssi_8730e[][D_ST_SIZE] = {
	{
		0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
	},
	{
		0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
	},
	{
		0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
	},
};

const s8 delta_swingidx_mp_5ga_p_txpwrtrkssi_8730e[][D_ST_SIZE] = {
	{
		0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
	},
	{
		0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
	},
	{
		0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
	},
};

const s8 delta_swingidx_mp_2ga_n_txpwrtrkssi_8730e[]    = {
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
};

const s8 delta_swingidx_mp_2ga_p_txpwrtrkssi_8730e[]    = {
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
};

const s8 delta_swingidx_mp_2g_cck_a_n_txpwrtrkssi_8730e[] = {
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
};

const s8 delta_swingidx_mp_2g_cck_a_p_txpwrtrkssi_8730e[] = {
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
};


/******************************************************************************
 *                           TX_Power byRate
 ******************************************************************************/
const u32 array_mp_txpwr_byrate[] = {
	PW_LMT_BAND_2_4G, PW_BYRATE_PARA_NSS1, PW_BYRATE_RATE_11M_1M, 0x50505050,
	PW_LMT_BAND_2_4G, PW_BYRATE_PARA_NSS1, PW_BYRATE_RATE_18M_6M, 0x50505050,
	PW_LMT_BAND_2_4G, PW_BYRATE_PARA_NSS1, PW_BYRATE_RATE_54M_24M, 0x484c5050,
	PW_LMT_BAND_2_4G, PW_BYRATE_PARA_NSS1, PW_BYRATE_RATE_MCS3_0, 0x50505050,
	PW_LMT_BAND_2_4G, PW_BYRATE_PARA_NSS1, PW_BYRATE_RATE_MCS7_4, 0x44484c50,
	PW_LMT_BAND_2_4G, PW_BYRATE_PARA_NSS1, PW_BYRATE_RATE_MCS11_8, 0x34383c40,
	PW_LMT_BAND_2_4G, PW_BYRATE_PARA_NSS1, PW_BYRATE_RATE_DCM4_0, 0x50505050,
	PW_LMT_BAND_5G, PW_BYRATE_PARA_NSS1, PW_BYRATE_RATE_18M_6M, 0x50505050,
	PW_LMT_BAND_5G, PW_BYRATE_PARA_NSS1, PW_BYRATE_RATE_54M_24M, 0x48484c4c,
	PW_LMT_BAND_5G, PW_BYRATE_PARA_NSS1, PW_BYRATE_RATE_MCS3_0, 0x4c4c5050,
	PW_LMT_BAND_5G, PW_BYRATE_PARA_NSS1, PW_BYRATE_RATE_MCS7_4, 0x44444848,
	PW_LMT_BAND_5G, PW_BYRATE_PARA_NSS1, PW_BYRATE_RATE_MCS11_8, 0x34383c40,
	PW_LMT_BAND_5G, PW_BYRATE_PARA_NSS1, PW_BYRATE_RATE_DCM4_0, 0x44484c50
};

#endif	/* _HALRF_HWIMG_RAW_DATA_8730E_H */
